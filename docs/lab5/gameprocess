@startuml
state "Игра" as Game {
    [*] --> Начало : инициализация
    Начало : Инициализация игры

    Начало --> Играет : стартИгры()

    state Играет {
        [*] --> ДвижениеЗмейки : moveSnake()
        ДвижениеЗмейки : Обновление координат головы змейки

        ДвижениеЗмейки --> ПроверкаСтолкновений : checkCollisions()
        ПроверкаСтолкновений : Проверка столкновений змейки с самой собой и границами 

        ПроверкаСтолкновений --> ОбновлениеЯблока : столкновениеСЯблоком()
        ОбновлениеЯблока : Проверка столкновения с яблоком

        ОбновлениеЯблока --> РостЗмейки : съестьЯблоко : столкновение
        РостЗмейки : Добавление новых сегментов к змейке и обновление очков

        РостЗмейки --> ГенерацияНовогоЯблока : generateApple()
        ГенерацияНовогоЯблока : Генерация нового яблока

        ГенерацияНовогоЯблока --> ГенерацияПрепятствия : generateObstacle()
        ГенерацияПрепятствия : Генерация нового препятствия

        ГенерацияПрепятствия --> КонецХода : завершениеХода()
        КонецХода : Завершение текущего хода

        КонецХода --> ДвижениеЗмейки : началоНовогоХода()

        ПроверкаСтолкновений --> КонецИгры : gameOver() : столкновение

    }

    КонецИгры : Игра завершена
    КонецИгры --> Начало : сбросИгры()
}
@enduml